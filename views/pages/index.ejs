<!DOCTYPE html>
<html>
<head>
  <%- include ("../partials/header.ejs") %>
</head>

<body>

  <!-- <%- include ("../partials/nav.ejs") %> -->
  <button class="tablink" onclick="openPage('Mixed')" id="defaultOpen">Mixed</button>
  <button class="tablink" onclick="openPage('NDP')" >NDP</button>
  <button class="tablink" onclick="openPage('Contact', this, 'blue')">Contact</button>
  <button class="tablink" onclick="openPage('About', this, 'orange')">About</button>
  <div id="mixedId"></div>

</body>
<script>
var mixedMap = L.map('mixedId').setView([53.5461, -113.4938], 12);
L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
    attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
    maxZoom: 18,
    id: 'mapbox/streets-v11',
    tileSize: 512,
    zoomOffset: -1,
    accessToken: 'pk.eyJ1IjoiZ25hcmx5d2hhbGUiLCJhIjoiY2tzYmI0Mjd2MDUyaDJvcGF3MmtrZ2swYyJ9.WIUqsJEFYMnbTUv2MiUPdg'
}).addTo(mixedMap);

var geojson; 
function style(feature) {
    return {
        fillColor: feature.properties.fill,
        weight: 2,
        opacity: 1,
        color: 'white',
        dashArray: '3',
        fillOpacity: feature.properties.fill_opacity
    };
}
function onEachFeature(feature, layer) {
    layer.on({
        mouseover: highlightFeature,
        mouseout: resetHighlight
    });
}
function highlightFeature(e) {
    var layer = e.target;

    layer.setStyle({
        weight: 5,
        color: '#666',
        dashArray: ''
    });
    info.update(layer.feature.properties)

    if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
        layer.bringToFront();
    }
}
function resetHighlight(e) {
    geojson.resetStyle(e.target);
    info.update();
}
var info = L.control();

info.onAdd = function (mixedMap) {
    this._div = L.DomUtil.create('div', 'info'); // create a div with a class "info"
    this.update();
    return this._div;
};

// method that we will use to update the control based on feature properties passed
info.update = function (props) {
    this._div.innerHTML = '<h4>Riverbend Voting Results</h4>' +  (props ?
        '<b>Poll Number: ' + props.pdnum + '</b><br /> Lib: ' + props.lVotes + '<br />Con: ' + props.cVotes +'<br />NDP: ' + props.nVotes
        : 'Hover over a neighbourhood');
};

info.addTo(mixedMap);



function openPage(mapType) {
  mixedMap.clearLayers();
  switch(mapType){
    case "Mixed":
    geojson = L.geoJson.ajax('FullBend.json', {style: style, local: true, onEachFeature: onEachFeature});
// geojson = new L.GeoJSON.AJAX('FullBendNDP.json', {style: style});
geojson.on('data:loaded', function(){
geojson.addTo(mixedMap);
});
      break;
    case "NDP":
    geojson = L.geoJson.ajax('FullBendNDP.json', {style: style, local: true, onEachFeature: onEachFeature});
// geojson = new L.GeoJSON.AJAX('FullBendNDP.json', {style: style});
geojson.on('data:loaded', function(){
geojson.addTo(mixedMap);
});
      break;
  }
  // var i, tabcontent, tablinks;
  // tabcontent = document.getElementsByClassName("tabcontent");
  // for (i = 0; i < tabcontent.length; i++) {
  //   tabcontent[i].style.display = "none";
  // }
  // tablinks = document.getElementsByClassName("tablink");
  // for (i = 0; i < tablinks.length; i++) {
  //   tablinks[i].style.backgroundColor = "";
  // }
  // document.getElementById(pageName).style.display = "block";
  // elmnt.style.backgroundColor = color;
}

// Get the element with id="defaultOpen" and click on it
document.getElementById("defaultOpen").click();
</script>
</html>
